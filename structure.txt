state:
  functions: { id: {id, name, body} }
  sections: [Section]
  currentSection

Section:
  id
  segments: [Component]  // generated from markdown
  virtual:
    completedTests

Segment = Markdown | CodeBlock | Solution | Test

Markdown:
  id
  body

CodeBlock:
  // if it has a name then its body gets exported to the state's fns
  // when rendering, we pull its value from the state's fns
  // but can reset it to the initialBody, which is taken from the markdown's
  // code block
  id
  name (String?) // name of the fn being written
  initialBody
  body
  maybe:
    isEditable // defaults to true, but can be set to false to render a block that isn't intended to be interacti
    isRunnable // or maybe they should always be runnable, running implies just evaluating the code and displaying the result and any output

Solution:
  for (CodeBlockID)
  body

Test:
  // a test will be defined as ```test with some format or other inside
  id
  for         // the id of the CodeBlock it's testing
  name
  body        // JavaScript code with an assertion in it
  status (TestStatus)

TestStatus
  = Pass
  = Pending
  = Fail(reason (String))
